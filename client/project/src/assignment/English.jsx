import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { useNavigate } from "react-router-dom";
import { ConfirmationPopup } from "../components/ConfirmationPopup";
import { MockSetGridNew } from "../components/MockSetGridNew";
import { english } from "../assignmentCategories/english";

export const English = () => {
  const [isLoading, setIsLoading] = useState(false);
  const [data, setData] = useState([]);
  const [showConfirmation, setShowConfirmation] = useState(false);
  const [selectedTest, setSelectedTest] = useState(null);
  const [errorMessage, setErrorMessage] = useState("");

  const backendurl = import.meta.env.VITE_BACKEND_URL;
  const navigate = useNavigate();

  const testCategories = english;

  const handleMockStartClick = async (test) => {
    setSelectedTest(test);
    setIsLoading(true);
    try {
      const response = await fetch(`${backendurl}/api/generate-english`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ topic: test.title, count: test.questions }),
      });
      const result = await response.json();

      if (!result.questions || result.questions.length === 0) {
        setErrorMessage("Questions could not be generated. Please try again.");
        setIsLoading(false);
        return;
      }

      setData(result.questions);
      setShowConfirmation(true);
    } catch (err) {
      console.error(err);
      setErrorMessage(
        "‚ùå Failed to generate questions due to a server error. Please try again."
      );
    }
    setIsLoading(false);
  };

  const confirmStartTest = () => {
    setShowConfirmation(false);
    navigate("/exampage", {
      state: {
        questions: data,
        duration: selectedTest.duration,
        testTitle: selectedTest.title,
                testChapter: selectedTest.chapter,

      },
    });
  };

  const cancelStartTest = () => {
    setShowConfirmation(false);
    setSelectedTest(null);
  };

  return (
    <div className="min-h-screen flex flex-col items-center py-4 sm:py-6 px-2 sm:px-4 relative">
      <AnimatePresence>
        {isLoading && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-white/90 backdrop-blur-sm flex items-center justify-center z-50"
          >
            <div className="flex flex-col items-center">
              <motion.div
                animate={{ rotate: 360 }}
                transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
                className="w-10 h-10 rounded-full border-3 border-blue-600 border-t-transparent"
              />
              <motion.p className="mt-3 text-gray-700 text-sm font-medium">
                Generating AI questions... Its Take some Seconds...
              </motion.p>
            </div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* pop error if question not generated */}
      {errorMessage && (
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          exit={{ opacity: 0, y: -20 }}
          transition={{ duration: 0.3 }}
          className="fixed top-14 sm:top-32 text-[10px] sm:text-sm right-4 z-50 px-3 py-2 bg-red-400 text-white rounded-md shadow-lg"
        >
          {errorMessage}
          <br />
          ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§ï‡§®‡•á‡§ï‡•ç‡§ü‡§ø‡§µ‡§ø‡§ü‡•Ä ‡§ï‡•Ä ‡§µ‡§ú‡§π ‡§∏‡•á ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§≤‡•ã‡§° ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§™‡§æ‡§§‡•á‡•§
          <button
            onClick={() => setErrorMessage("")}
            className="ml-2 font-bold text-white"
          >
            ‚úï
          </button>
        </motion.div>
      )}

      <ConfirmationPopup
        isOpen={showConfirmation}
        onConfirm={confirmStartTest}
        onCancel={cancelStartTest}
        test={selectedTest}
      />

      <motion.div
        className="text-center mb-12"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.4 }}
      >
        <motion.div className="text-xs font-semibold tracking-wider text-blue-500 uppercase mb-2">
          AI-Powered Test
        </motion.div>
        <motion.h1 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-2">
          English{" "}
          <span className="bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent">
            Assessment
          </span>
        </motion.h1>
        <motion.p className="text-gray-600 max-w-2xl mx-auto text-[11px] sm:text-sm">
          Test your English skills with questions generated by AI
        </motion.p>
      </motion.div>

      {/* Professional Guidelines Box */}
      <motion.div
        className="max-w-3xl mb-4 mx-auto sm:mb-1 p-4 sm:p-4 rounded-md sm:border-l-4 border-yellow-400 bg-yellow-50 shadow-sm text-left"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.4 }}
      >
        <p className="text-yellow-800 font-semibold mb-2">
          üí° Guidelines for AI-Generated Tests:
        </p>
        <ul className="list-disc list-inside space-y-1 text-yellow-800 text-[11px] sm:text-sm">
          <li>
            Connectivity issues can sometimes prevent questions from loading.
          </li>
          <li>
            Questions are dynamically generated by AI and may occasionally
            contain minor errors.
          </li>
          <li>
            ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§ï‡§®‡•á‡§ï‡•ç‡§ü‡§ø‡§µ‡§ø‡§ü‡•Ä ‡§ï‡•Ä ‡§µ‡§ú‡§π ‡§∏‡•á ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§≤‡•ã‡§° ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§™‡§æ‡§§‡•á‡•§ ‡§ê‡§∏‡•á
            ‡§Æ‡•á‡§Ç ‡§ï‡•É‡§™‡§Ø‡§æ ‡§¨‡•à‡§ï ‡§ú‡§æ‡§ï‡§∞ ‡§¶‡•ã‡§¨‡§æ‡§∞‡§æ ‡§ü‡•á‡§∏‡•ç‡§ü ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§Ø‡§π ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§π‡•ã ‡§∏‡§ï‡§§‡•Ä ‡§π‡•à
            ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§™‡•ç‡§∞‡§∂‡•ç‡§® AI ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§ú‡§®‡§∞‡•á‡§ü ‡§ï‡§ø‡§è ‡§ó‡§è ‡§π‡•à‡§Ç‡•§
          </li>
        </ul>
      </motion.div>

      <MockSetGridNew
        testCategories={testCategories}
        handleMockStart={handleMockStartClick}
      />
    </div>
  );
};






// import { useState } from "react";
// import { motion, AnimatePresence } from "framer-motion";
// import { useNavigate } from "react-router-dom";
// import { ConfirmationPopup } from "../components/ConfirmationPopup";
// import { MockSetGrid } from "../components/MockSetGrid";

// export const English = () => {
//   const [isLoading, setIsLoading] = useState(false);
//   const [data, setData] = useState([]);
//   const [showConfirmation, setShowConfirmation] = useState(false);
//   const [selectedTest, setSelectedTest] = useState(null);

//   const navigate = useNavigate();

//   const testCategories = [
//   {
//       title: "Sentence Correction",
//       difficulty: "Easy",
//       description: "Identify and correct grammatical errors in sentences",
//       questions: 5,
//       time: "10 min",
//       duration: 10,
//       icon: "‚úçÔ∏è",
//       color: "from-blue-500 to-cyan-500",
//     },
//     {
//       title: "Spotting the Error",
//       difficulty: "Hard",
//       description: "Identify errors in sentences and select the correct option",
//       questions: 5,
//       time: "10 min",
//       duration: 10,
//       icon: "üîç",
//       color: "from-red-500 to-orange-500",
//     },
//   ];

//   const handleMockStartClick = async (test) => {
//     setSelectedTest(test);
//     setIsLoading(true);

//     try {
//       const response = await fetch("http://localhost:3000/generate-questions", {
//         method: "POST",
//         headers: { "Content-Type": "application/json" },
//         body: JSON.stringify({ topic: test.title, count: test.questions }),
//       });

//       const result = await response.json();
//       setData(result.questions || generateFallbackQuestions(test.title));
//       setShowConfirmation(true);
//     } catch (err) {
//       console.error(err);
//       setData(generateFallbackQuestions(test.title));
//       setShowConfirmation(true);
//     }

//     setIsLoading(false);
//   };

// const generateFallbackQuestions = (category) => {
//     if (category === "Sentence Correction") {
//       return [
//         {
//           id: 1,
//           category: "Sentence Correction",
//           question: "Which of the following sentences is grammatically correct?",
//           options: [
//             "She don't like coffee.",
//             "She doesn't likes coffee.",
//             "She doesn't like coffee.",
//             "She not like coffee."
//           ],
//           answer: "She doesn't like coffee.",
//           explanation: "The subject 'She' is third person singular, so it requires the auxiliary verb 'does' in negative sentences."
//         },
// {
//           id: 2,
//           category: "Sentence Correction",
//           question: "Choose the correct sentence:",
//           options: [
//             "The team are playing well.",
//             "The team is playing well.",
//             "The team am playing well.",
//             "The team be playing well."
//           ],
//           answer: "The team is playing well.",
//           explanation: "Collective nouns like 'team' are treated as singular in American English."
//         },
//         {
//           id: 3,
//           category: "Sentence Correction",
//           question: "Identify the correct sentence structure:",
//           options: [
//             "Although it was raining, but we went for a walk.",
//             "Although it was raining, we went for a walk.",
//             "It was raining, we went for a walk.",
//             "Despite it was raining, we went for a walk."
//           ],
//           answer: "Although it was raining, we went for a walk.",
//           explanation: "In English, we don't use 'although' and 'but' together in the same sentence."
//         },{
//           id: 4,
//           category: "Sentence Correction",
//           question: "Select the properly punctuated sentence:",
//           options: [
//             "The students books were left in the classroom.",
//             "The student's books were left in the classroom.",
//             "The students' books were left in the classroom.",
//             "The students's books were left in the classroom."
//           ],
//           answer: "The students' books were left in the classroom.",
//           explanation: "When referring to something belonging to multiple students, use the plural possessive form 'students''."
//         },
//  {
//           id: 5,
//           category: "Sentence Correction",
//           question: "Which sentence uses the correct verb tense?",
//           options: [
//             "I have seen that movie last week.",
//             "I saw that movie last week.",
//             "I had seen that movie last week.",
//             "I was seeing that movie last week."
//           ],
//           answer: "I saw that movie last week.",
//           explanation: "Simple past tense is used for actions completed at a specific time in the past."
//         }
//       ];
//     }
//         else if (category === "Spotting the Error") {
//       return [{
//           id: 1,
//           category: "Spotting the Error",
//           question: "Identify the error in the following sentence: 'The data shows that the number of students are increasing each year.'",
//           options: [
//             "The data shows",
//             "that the number",
//             "of students are increasing",
//             "each year"
//           ],
//           answer: "of students are increasing",
//           explanation: "The subject 'the number' is singular, so it should take the singular verb 'is' instead of 'are'."
//         },
//         {
//           id: 2,
//           category: "Spotting the Error",
//           question: "Identify the error in the following sentence: 'Neither of the candidates have submitted their applications on time.'",
//           options: [
//             "Neither of the candidates",
//             "have submitted",
//             "their applications",
//             "on time"
//           ],
//           answer: "have submitted",
//           explanation: "'Neither' is singular and requires a singular verb. It should be 'has submitted'."
//         },{
//           id: 3,
//           category: "Spotting the Error",
//           question: "Identify the error in the following sentence: 'The manager, along with his team members, are attending the conference.'",
//           options: [
//             "The manager, along with his team members,",
//             "are attending",
//             "the conference",
//             "No error"
//           ],
//           answer: "are attending",
//           explanation: "When using 'along with', the verb agrees with the first subject. Since 'manager' is singular, it should be 'is attending'."
//         },
//         {
//           id: 4,
//           category: "Spotting the Error",
//           question: "Identify the error in the following sentence: 'She is one of those writers who always surprise their readers with unexpected plot twists.'",
//           options: [
//             "She is one of those writers",
//             "who always surprise",
//             "their readers",
//             "with unexpected plot twists"
//           ],
//           answer: "who always surprise",
//           explanation: "The relative pronoun 'who' refers to 'writers' (plural), so the verb should be 'surprise' (plural). However, the pronoun 'their' should be changed to 'her' to agree with 'she'."
//         },{
//           id: 5,
//           category: "Spotting the Error",
//           question: "Identify the error in the following sentence: 'The committee members has not yet reached a decision on the matter.'",
//           options: [
//             "The committee members",
//             "has not yet",
//             "reached a decision",
//             "on the matter"
//           ],
//           answer: "has not yet",
//           explanation: "'Committee members' is plural, so it requires the plural verb 'have' instead of 'has'."
//         }
//       ];
//     }
//     return [];
//   };

//   const confirmStartTest = () => {
//     setShowConfirmation(false);
//     navigate("/exampage", {
//       state: {
//         questions: data,
//         duration: selectedTest.duration,
//         testTitle: selectedTest.title,
//       },
//     });
//   };

//   const cancelStartTest = () => {
//     setShowConfirmation(false);
//     setSelectedTest(null);
//   };

//   return (
//     <div className="min-h-screen flex flex-col items-center py-4 sm:py-6 px-2 sm:px-4 relative">
//       <AnimatePresence>
//         {isLoading && (
//           <motion.div
//             initial={{ opacity: 0 }}
//             animate={{ opacity: 1 }}
//             exit={{ opacity: 0 }}
//             className="fixed inset-0 bg-white/90 backdrop-blur-sm flex items-center justify-center z-50"
//           >
//             <div className="flex flex-col items-center">
//               <motion.div
//                 animate={{ rotate: 360 }}
//                 transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
//                 className="w-10 h-10 rounded-full border-3 border-blue-600 border-t-transparent"
//               />
//               <motion.p className="mt-3 text-gray-700 text-sm font-medium">
//                 Generating AI questions...
//               </motion.p>
//             </div>
//           </motion.div>
//         )}
//       </AnimatePresence>

//       <ConfirmationPopup
//         isOpen={showConfirmation}
//         onConfirm={confirmStartTest}
//         onCancel={cancelStartTest}
//         test={selectedTest}
//       />

//       <motion.div className="text-center mb-12" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.4 }}>
//         <motion.div className="text-xs font-semibold tracking-wider text-blue-500 uppercase mb-2">
//           AI-Powered Test
//         </motion.div>
//         <motion.h1 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-2">
//           English <span className="bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent">Assessment</span>
//         </motion.h1>
//         <motion.p className="text-gray-600 max-w-2xl mx-auto text-[11px] sm:text-sm">
//           Test your English skills with questions generated by AI
//         </motion.p>
//       </motion.div>

//       <MockSetGrid testCategories={testCategories} handleMockStart={handleMockStartClick} />
//     </div>
//   );
// };

// import { useState } from "react";
// import { motion, AnimatePresence } from "framer-motion";
// import { useNavigate } from "react-router-dom";
// import { ConfirmationPopup } from "../components/ConfirmationPopup";
// import { MockSetGrid } from "../components/MockSetGrid";

// export const English = () => {
//   const [isLoading, setIsLoading] = useState(false);
//   const [data, setData] = useState([]);
//   const [showConfirmation, setShowConfirmation] = useState(false);
//   const [selectedTest, setSelectedTest] = useState(null);

//   const navigate = useNavigate();

//   const testCategories = [
//     {
//       title: "sentence correction",
//       difficulty: "Easy",
//       description: "Test your English skills with AI-generated questions",
//       questions: 5,
//       time: "10 min",
//       duration: 10,
//       icon: "üìù",
//       color: "from-blue-500 to-cyan-500",
//     },
//         {
//       title: "para jumbles",
//       difficulty: "Easy",
//       description: "Test your English skills with AI-generated questions",
//       questions: 5,
//       time: "10 min",
//       duration: 10,
//       icon: "üìù",
//       color: "from-blue-500 to-cyan-500",
//     },
//         {
//           title: "spotting the error",
//           difficulty: "Easy",
//       description: "Test your English skills with AI-generated questions",
//       questions: 5,
//       time: "10 min",
//       duration: 10,
//       icon: "üìù",
//       color: "from-blue-500 to-cyan-500",
//     },
//   ];

//   const handleMockStartClick = async (test) => {
//     setSelectedTest(test);
//     setIsLoading(true);

//     try {
//       const response = await fetch("http://localhost:3000/generate-questions", {
//         method: "POST",
//         headers: { "Content-Type": "application/json" },
//         body: JSON.stringify({ topic: "English", count: test.questions }),
//       });

//       const result = await response.json();
// console.log(result)
//       setData(result.questions || generateFallbackQuestions());
//       setShowConfirmation(true);
//     } catch (err) {
//       console.error(err);
//       setData(generateFallbackQuestions());
//       setShowConfirmation(true);
//     }

//     setIsLoading(false);
//   };

//   const generateFallbackQuestions = () => [
//     {
//       id: 1,
//       category: "English",
//       question: "Choose the correct verb form: She _____ to the store yesterday.",
//       options: ["go", "goes", "went", "gone"],
//       answer: "went",
//     },
//     {
//       id: 2,
//       category: "English",
//       question: "What is the synonym of 'Benevolent'?",
//       options: ["Cruel", "Kind", "Selfish", "Stingy"],
//       answer: "Kind",
//     },
//     {
//       id: 3,
//       category: "English",
//       question: "Identify the grammatically correct sentence:",
//       options: [
//         "She don't like apples.",
//         "She doesn't likes apples.",
//         "She doesn't like apples.",
//         "She not like apples.",
//       ],
//       answer: "She doesn't like apples.",
//     },
//     {
//       id: 4,
//       category: "English",
//       question: "Which word is an antonym of 'Transparent'?",
//       options: ["Clear", "Opaque", "Translucent", "Lucid"],
//       answer: "Opaque",
//     },
//     {
//       id: 5,
//       category: "English",
//       question: "Choose the correctly spelled word:",
//       options: ["Recieve", "Receive", "Receeve", "Resieve"],
//       answer: "Receive",
//     },
//   ];

//   const confirmStartTest = () => {
//     setShowConfirmation(false);
//     navigate("/exampage", {
//       state: {
//         questions: data.slice(0, selectedTest.questions),
//         duration: selectedTest.duration,
//         testTitle: selectedTest.title,
//       },
//     });
//   };

//   const cancelStartTest = () => {
//     setShowConfirmation(false);
//     setSelectedTest(null);
//   };

//   return (
//     <div className="min-h-screen flex flex-col items-center py-4 sm:py-6 px-2 sm:px-4 relative">
//       <AnimatePresence>
//         {isLoading && (
//           <motion.div
//             initial={{ opacity: 0 }}
//             animate={{ opacity: 1 }}
//             exit={{ opacity: 0 }}
//             className="fixed inset-0 bg-white/90 backdrop-blur-sm flex items-center justify-center z-50"
//           >
//             <div className="flex flex-col items-center">
//               <motion.div
//                 animate={{ rotate: 360 }}
//                 transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
//                 className="w-10 h-10 rounded-full border-3 border-blue-600 border-t-transparent"
//               />
//               <motion.p className="mt-3 text-gray-700 text-sm font-medium">
//                 Generating AI questions...
//               </motion.p>
//             </div>
//           </motion.div>
//         )}
//       </AnimatePresence>

//       <ConfirmationPopup
//         isOpen={showConfirmation}
//         onConfirm={confirmStartTest}
//         onCancel={cancelStartTest}
//         test={selectedTest}
//       />

//       <motion.div className="text-center mb-12" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.4 }}>
//         <motion.div className="text-xs font-semibold tracking-wider text-blue-500 uppercase mb-2">
//           AI-Powered Test
//         </motion.div>
//         <motion.h1 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-2">
//           English <span className="bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent">Assessment</span>
//         </motion.h1>
//         <motion.p className="text-gray-600 max-w-2xl mx-auto text-[11px] sm:text-sm">
//           Test your English skills with questions generated by AI
//         </motion.p>
//       </motion.div>

//       <MockSetGrid testCategories={testCategories} handleMockStart={handleMockStartClick} />
//     </div>
//   );
// };

// import { useState } from "react";
// import { motion, AnimatePresence } from "framer-motion";
// import { useNavigate } from "react-router-dom";
// import { ConfirmationPopup } from "../components/ConfirmationPopup";
// import { MockSetGrid } from "../components/MockSetGrid";

// export const English = () => {
//   const [isLoading, setIsLoading] = useState(false);
//   const [data, setData] = useState([]);
//   const [showConfirmation, setShowConfirmation] = useState(false);
//   const [selectedTest, setSelectedTest] = useState(null);

//   const navigate = useNavigate();

//   const testCategories = [
//     {
//           title: "English",

//       category: "sentence correction",
//       difficulty: "Easy",
//       description: "Test your English skills with AI-generated questions",
//       questions: 5,
//       time: "10 min",
//       duration: 10,
//       icon: "üìù",
//       color: "from-blue-500 to-cyan-500",
//     },
//         {
//           title: "English",

//       category: "para jumbles",
//       difficulty: "Easy",
//       description: "Test your English skills with AI-generated questions",
//       questions: 5,
//       time: "10 min",
//       duration: 10,
//       icon: "üìù",
//       color: "from-blue-500 to-cyan-500",
//     },
//         {
//           title: "English",
//           category: "spotting the error",
//           difficulty: "Easy",
//       description: "Test your English skills with AI-generated questions",
//       questions: 5,
//       time: "10 min",
//       duration: 10,
//       icon: "üìù",
//       color: "from-blue-500 to-cyan-500",
//     },
//   ];

//   const handleMockStartClick = async (test) => {
//     setSelectedTest(test);
//     setIsLoading(true);

//     try {
//       const response = await fetch("http://localhost:3000/generate-questions", {
//         method: "POST",
//         headers: { "Content-Type": "application/json" },
//         body: JSON.stringify({ topic: "English", count: test.questions }),
//       });

//       const result = await response.json();
// console.log(result)
//       setData(result.questions || generateFallbackQuestions());
//       setShowConfirmation(true);
//     } catch (err) {
//       console.error(err);
//       setData(generateFallbackQuestions());
//       setShowConfirmation(true);
//     }

//     setIsLoading(false);
//   };

//   const generateFallbackQuestions = () => [
//     {
//       id: 1,
//       category: "English",
//       question: "Choose the correct verb form: She _____ to the store yesterday.",
//       options: ["go", "goes", "went", "gone"],
//       answer: "went",
//     },
//     {
//       id: 2,
//       category: "English",
//       question: "What is the synonym of 'Benevolent'?",
//       options: ["Cruel", "Kind", "Selfish", "Stingy"],
//       answer: "Kind",
//     },
//     {
//       id: 3,
//       category: "English",
//       question: "Identify the grammatically correct sentence:",
//       options: [
//         "She don't like apples.",
//         "She doesn't likes apples.",
//         "She doesn't like apples.",
//         "She not like apples.",
//       ],
//       answer: "She doesn't like apples.",
//     },
//     {
//       id: 4,
//       category: "English",
//       question: "Which word is an antonym of 'Transparent'?",
//       options: ["Clear", "Opaque", "Translucent", "Lucid"],
//       answer: "Opaque",
//     },
//     {
//       id: 5,
//       category: "English",
//       question: "Choose the correctly spelled word:",
//       options: ["Recieve", "Receive", "Receeve", "Resieve"],
//       answer: "Receive",
//     },
//   ];

//   const confirmStartTest = () => {
//     setShowConfirmation(false);
//     navigate("/exampage", {
//       state: {
//         questions: data.slice(0, selectedTest.questions),
//         duration: selectedTest.duration,
//         testTitle: selectedTest.title,
//       },
//     });
//   };

//   const cancelStartTest = () => {
//     setShowConfirmation(false);
//     setSelectedTest(null);
//   };

//   return (
//     <div className="min-h-screen flex flex-col items-center py-4 sm:py-6 px-2 sm:px-4 relative">
//       <AnimatePresence>
//         {isLoading && (
//           <motion.div
//             initial={{ opacity: 0 }}
//             animate={{ opacity: 1 }}
//             exit={{ opacity: 0 }}
//             className="fixed inset-0 bg-white/90 backdrop-blur-sm flex items-center justify-center z-50"
//           >
//             <div className="flex flex-col items-center">
//               <motion.div
//                 animate={{ rotate: 360 }}
//                 transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
//                 className="w-10 h-10 rounded-full border-3 border-blue-600 border-t-transparent"
//               />
//               <motion.p className="mt-3 text-gray-700 text-sm font-medium">
//                 Generating AI questions...
//               </motion.p>
//             </div>
//           </motion.div>
//         )}
//       </AnimatePresence>

//       <ConfirmationPopup
//         isOpen={showConfirmation}
//         onConfirm={confirmStartTest}
//         onCancel={cancelStartTest}
//         test={selectedTest}
//       />

//       <motion.div className="text-center mb-12" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.4 }}>
//         <motion.div className="text-xs font-semibold tracking-wider text-blue-500 uppercase mb-2">
//           AI-Powered Test
//         </motion.div>
//         <motion.h1 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-2">
//           English <span className="bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent">Assessment</span>
//         </motion.h1>
//         <motion.p className="text-gray-600 max-w-2xl mx-auto text-[11px] sm:text-sm">
//           Test your English skills with questions generated by AI
//         </motion.p>
//       </motion.div>

//       <MockSetGrid testCategories={testCategories} handleMockStart={handleMockStartClick} />
//     </div>
//   );
// };
